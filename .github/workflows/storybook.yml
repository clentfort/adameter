name: Storybook Deploy

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch

permissions:
  contents: write # To push to gh-pages branch
  pages: write # To deploy to GitHub Pages
  id-token: write # For OIDC token if action uses it

jobs:
  build-storybook:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install Node.js for build
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Download translations
        run: ./scripts/download-translations.sh

      - name: Build Storybook
        run: pnpm run build-storybook

      - name: Upload Storybook artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: storybook-static # The contents of this directory are uploaded

  deploy-to-gh-pages:
    needs: build-storybook
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-to-vercel-preview:
    runs-on: ubuntu-latest
    needs: build-storybook
    environment:
      name: vercel-preview
      url: ${{ steps.vercel-deployment.outputs.url }} # Vercel CLI 'deploy' outputs 'url'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Storybook artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages # Artifact from 'build-storybook' job
          path: storybook-static-downloaded # Download artifact contents here

      - name: Setup Node.js for Vercel CLI
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel project configuration
        # This command creates/updates .vercel/project.json in the CWD (repo root)
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Deploy to Vercel
        id: vercel-deployment
        # Deploys the content of './storybook-static-downloaded' directory.
        # Vercel CLI uses the .vercel/project.json from CWD (repo root) for project linking.
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} ./storybook-static-downloaded
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
